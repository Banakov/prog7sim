## Примитивы синхронизации в Python
### 1. Event (Событие)

Используется для сигнала между потоками о наступлении какого-либо события.

Пример:

import threading

event = threading.Event()

def worker():
    print("Ожидание события...")
    event.wait()
    print("Получено событие!")

# В основном потоке
event.set()  # Посылаем сигнал
Когда использовать:  
- Для уведомления одного или нескольких потоков о наступлении определённого события.

### 2. Condition (Условие)

Позволяет потокам взаимодействовать при наступлении определённых условий.

Пример использования:

import threading

condition = threading.Condition()
buffer = 

def producer():
    with condition:
        buffer.append("данные")
        print("Производитель добавил данные")
        condition.notify()

def consumer():
    with condition:
        while not buffer:
            condition.wait()
        data = buffer.pop()
        print("Потребитель получил данные")
Когда использовать:  
- Когда необходимо организовать взаимодействие между потоками по условию.

### 3. Lock (Мьютекс)

Lock обеспечивает взаимное исключение, позволяя только одному потоку выполнять критическую секцию одновременно.

Пример использования:

import threading

lock = threading.Lock()

def critical_section():
    with lock:
        # Критическая секция
        print(f"Поток {threading.current_thread().name} входит в критическую секцию")
        # Здесь выполняются операции, которые не должны выполняться одновременно
Когда использовать:  
- Когда необходимо обеспечить, чтобы определённый блок кода не выполнялся одновременно несколькими потоками.

### 4. RLock (Рекурсивный мьютекс)

Позволяет одному потоку захватывать один и тот же мьютекс несколько раз (рекурсивно).

Пример использования:

import threading

rlock = threading.RLock()

def recursive_function(n):
    with rlock:
        if n > 0:
            print(f"{threading.current_thread().name} вызывает рекурсию с n={n}")
            recursive_function(n - 1)
Когда использовать:  
- В случаях, когда функция вызывает саму себя и использует общий блок кода, требующий синхронизации.
